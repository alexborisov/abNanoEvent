{"body":"# abNanoEvent\r\nAn ultralight JS event emitter\r\n\r\nIt aims to be as small and light as possible (501 bytes compressed, 265 bytes gziped) and is specifically designed (but not restricted) for usage in the browser.\r\n\r\n**Please note:** that this is an *internal component* that I have decided to open source for the greater good. It is designed to be as *simplistic* an implementation of the observer pattern as possible. The requirements were highest possible performance and lowest possible footprint. Because of that functionality and sanity checking are at an utmost minimal (it is assumed that the end developer will ensure proper implementation). If you require something more sophisticated there are plenty of libraries already available.\r\n\r\n## Usage\r\n\r\nYou can use this script in the browser, as a mixin or as a node module (I will package this into a proper node module at some point).\r\n\r\nSimply instantiate a new abNanoEvent object or inherit it in your class.\r\n\r\n### .on(eventName, callback)\r\n  Subscribe to an event. Callback will be executed once event is emitted\r\n\r\n### .off(eventName, callback)\r\n  Unsubscribe from an event. If you call this function with just one argument (i.e no callback) then the entire event will be removed.\r\n\r\n### .emit(eventName, [parameters])\r\n  Trigger an event. All registered callback functions that are subscribed to that event will be executed. Any parameters will be passed to the callback\r\n\r\n## Example\r\n\r\n```js\r\nvar ee = new abNanoEvent();\r\n\r\nfunction cow(type) { console.log(type + \" cow\") };\r\n\r\nee.on(\"moo\", cow);\r\nee.emit(\"moo\",['tasty']);\r\nee.off(\"moo\");\r\n```\r\n\r\nOutputs to console:\r\n\r\n```js\r\ntasty cow\r\n```\r\n\r\n## License\r\n(MIT 2-Clause)\r\n\r\nCopyright (c) 2012, Alex Borisov <[http://alexborisov.org](http://alexborisov.org)>\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice, this\r\n   list of conditions and the following disclaimer.\r\n2. Redistributions in binary form must reproduce the above copyright notice,\r\n   this list of conditions and the following disclaimer in the documentation\r\n   and/or other materials provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","google":"UA-34176124-1","tagline":"An ultralight JS event emitter","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"abNanoEvent"}